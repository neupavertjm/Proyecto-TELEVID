import streamlit as st
import json

# --- CONFIGURACI√ìN INICIAL ---
st.set_page_config(page_title="Proyecto TELEVID", layout="wide", page_icon="üéÆ")

# --- RUTAS DE IM√ÅGENES ---
logos_juegos = {
    'League of Legends': 'lol.jpg',
    'Valorant': 'valorant.jpg',
    'Counter Strike': 'counter.jpg'
}

logo_ila = "ila.jpg"
logo_neupaterm = "neupaterm_logo.png"

# --- CARGAR DATOS ---
with open('data.json', 'r', encoding='utf-8') as f:
    datos = json.load(f)

# --- T√çTULO Y DESCRIPCI√ìN ---
st.title("üîç Buscador de t√©rminos y usos terminol√≥gicos del lenguaje especializado de los videojuegos")
st.markdown(
    """
    **Proyecto realizado por Juan Manuel Neupavert Alzola**  
    Este buscador, que forma parte de la continuaci√≥n de mi Trabajo de Fin de M√°ster, permite explorar t√©rminos y usos terminol√≥gicos pertenecientes al lenguaje especializado de los videojuegos, pudiendo ver los distintos usos que tiene cada t√©rmino, sus definiciones, los mecanismos de incorporaci√≥n al espa√±ol y sus relaciones conceptuales dentro de nuestro corpus.
    """
)

# --- SIDEBAR ---
st.sidebar.title("‚ÑπÔ∏è Informaci√≥n general")
st.sidebar.info(
    "üß© **TELEVID** fue el primer prototipo funcional de un buscador terminol√≥gico aplicado al lenguaje de los videojuegos. "
    "Su dise√±o se basa en el modelo **DOCUTERM**, desarrollado en el Instituto de Ling√º√≠stica Aplicada (ILA, Universidad de C√°diz) "
    "por el profesor **Miguel Casas G√≥mez**, centrado en la documentaci√≥n de los usos terminol√≥gicos. "
    "Puedes consultar la publicaci√≥n original en: "
    "[Casas G√≥mez (2022)](https://doi.org/10.4995/rlyla.2022.16249). "
    "A partir de esta base te√≥rica y metodol√≥gica surge **NeupaTerm**, un gestor terminol√≥gico integral que ampl√≠a las posibilidades "
    "de an√°lisis, gesti√≥n y documentaci√≥n de los usos en distintos lenguajes especializados."
)



st.sidebar.markdown("### üë§ Proyecto realizado por")
st.sidebar.markdown("**Juan Manuel Neupavert Alzola**")
st.sidebar.markdown("[LinkedIn](https://www.linkedin.com/in/juan-manuel-neupavert/) | [Email](mailto:neupavertjm@gmail.com)")

# --- LOGO NEUPATERM (sidebar con fondo blanco y marco elegante) ---
st.sidebar.markdown("---")
st.sidebar.markdown(
    f"""
    <p style='text-align:center; font-size:13px; color:gray; margin-top:-5px;'>
        Proyecto vinculado:<br>
        <a href='https://neupaterm.com' target='_blank' style='text-decoration:none; color:#2A63B8;'>
            <b>NeupaTerm</b>
        </a><br>
        Gestor terminol√≥gico basado en el modelo <b>DOCUTERM</b>.
    </p>
    """,
    unsafe_allow_html=True
)

# --- SECCI√ìN DE EVOLUCI√ìN EN SIDEBAR ---
st.sidebar.markdown("---")
st.sidebar.markdown("### üöÄ Evoluci√≥n del proyecto")
st.sidebar.markdown(
    """
    **TELEVID** fue el primer prototipo funcional de un buscador terminol√≥gico aplicado al lenguaje de los videojuegos.  
    A partir de su desarrollo, surge **[NeupaTerm](https://neupaterm.com)**, un gestor terminol√≥gico completo basado en el modelo **DOCUTERM**, orientado a documentar **usos terminol√≥gicos** y relaciones conceptuales de forma din√°mica y multiling√ºe.
    """
)
st.sidebar.markdown("üß© TELEVID sirvi√≥ como base metodol√≥gica y t√©cnica de NeupaTerm.")

# --- INTERFAZ PRINCIPAL ---
st.markdown("### üïπÔ∏è Explora los t√©rminos del corpus especializado")
st.markdown("Selecciona un t√©rmino o escr√≠belo manualmente para consultar sus usos en el corpus:")

terminos_disponibles = [
    "Ace", "Agente", "Baitear", "Bait", "Baiter", "Boost", "Boostear", "Boosteo", "Bot", "Botlane",
    "Bufo", "Bufar", "Buff", "Carga", "Carrear", "Carry", "Campe√≥n", "Clutcher", "Clutchear", "Clutch", "Debuff",
    "Kit", "Disengage", "Draft", "Drop", "Droppear", "Engagear", "Engage", "Feed", "Feedear", "Flash",
    "Flashear", "FPS", "Frag", "Gankeo", "Gankear", "Gankeado", "Kill", "Matar", "Kill feed", "Nerfeo",
    "Nerfear", "A una bala", "Oneshot", "Oneshotear", "OTP", "Pentakill", "Pentakillear", "Ping", "Pinguear",
    "Pingueo", "Pracc", "Praquear", "Scrimmear", "Scrim", "Solokill", "Solokillear", "Stack", "Stackear",
    "Toplane", "Toplaner"
]

busqueda = ""

# --- SELECTBOX + INPUT MANUAL ---
termino_seleccionado = st.selectbox("üìÇ Selecciona un t√©rmino:", [""] + terminos_disponibles)
if termino_seleccionado:
    busqueda = termino_seleccionado

entrada_manual = st.text_input("üñäÔ∏è O escribe un t√©rmino:")
if entrada_manual:
    busqueda = entrada_manual

# --- L√ìGICA DE B√öSQUEDA ---
if busqueda:
    busqueda_lower = busqueda.lower()
    exactos = [
        item for item in datos
        if busqueda_lower == item.get("T√©rmino en espa√±ol", "").lower()
        or busqueda_lower == item.get("T√©rmino en ingl√©s", "").lower()
    ]

    def mostrar_resultado(r):
        st.markdown(f"### üéÆ **{r.get('T√©rmino en espa√±ol', '')} / {r.get('T√©rmino en ingl√©s', '')}**")
        campos = [
            ("Sub√≠ndice", "Sub√≠ndice"),
            ("Definici√≥n", "üìò Definici√≥n"),
            ("Mecanismo de incorporaci√≥n al espa√±ol", "‚öôÔ∏è Mecanismo de incorporaci√≥n"),
            ("Categor√≠a ling√º√≠stica", "üî§ Categor√≠a ling√º√≠stica"),
            ("Contextos en espa√±ol", "üí¨ Contextos en espa√±ol"),
            ("Contexto en ingl√©s", "üí¨ Contexto en ingl√©s"),
            ("Fuente contexto espa√±ol", "üîó Fuente contexto en espa√±ol"),
            ("Fuente contexto ingl√©s", "üîó Fuente contexto en ingl√©s"),
            ("Relaciones conceptuales", "üß† Relaciones conceptuales"),
            ("Cuestiones traductol√≥gicas", "üà≥ Cuestiones traductol√≥gicas"),
            ("Fuente", "üìö Fuente"),
            ("Notas", "üìù Notas"),
        ]

        for clave, etiqueta in campos:
            valor = r.get(clave, "")
            if valor:
                st.markdown(f"**{etiqueta}:** {valor}")

        juego_relacionado = r.get('Juego Relacionado', '')
        if juego_relacionado:
            juegos = [j.strip() for j in juego_relacionado.split(',')]
            st.markdown(f"**üéÆ Juegos relacionados:**")
            cols = st.columns(len(juegos))
            for i, juego in enumerate(juegos):
                if juego in logos_juegos:
                    with cols[i]:
                        st.image(logos_juegos[juego], width=70)
                        st.markdown(juego)

        st.markdown("---")

    if exactos:
        st.subheader("üîπ Coincidencias exactas:")
        for r in exactos:
            mostrar_resultado(r)
    else:
        st.warning("‚ö†Ô∏è No se encontraron coincidencias exactas.")
else:
    st.info("üí° Introduce un t√©rmino para comenzar la b√∫squeda.")

# --- SECCI√ìN ADICIONAL: DE TELEVID A NEUPATERM ---
with st.expander("üß© De TELEVID a NeupaTerm"):
    st.markdown("""
    TELEVID representa el primer paso hacia un entorno m√°s amplio de gesti√≥n terminol√≥gica.
    
    A partir de su estructura de b√∫squeda de corpus, surge **[NeupaTerm](https://www.neupaterm.com)**, un sistema que ampl√≠a las capacidades de TELEVID para:
    - Gestionar glosarios terminol√≥gicos completos.  
    - Documentar los usos terminol√≥gicos seg√∫n el modelo **DOCUTERM**.  
    - Trabajar con equivalencias multiling√ºes y formatos profesionales (JSON, CSV, TMX).  
    
    Ambos proyectos comparten un objetivo com√∫n: **mejorar la comprensi√≥n y gesti√≥n del lenguaje especializado**, tomando los videojuegos como dominio inicial de an√°lisis.
    """)

    st.markdown("<br>", unsafe_allow_html=True)
    st.markdown(
        """
        <div style='text-align:center; background-color:white;
                    border:1px solid #ddd; border-radius:12px;
                    box-shadow:0px 2px 6px rgba(0,0,0,0.1);
                    padding:12px; width:100%;'>
            <img src='neupaterm_logo.png' width='220'>
            <p style='font-size:13px; color:gray; margin-top:8px;'>
                <i>Logo del gestor terminol√≥gico <b>NeupaTerm</b>, evoluci√≥n directa del prototipo TELEVID.</i>
            </p>
        </div>
        """,
        unsafe_allow_html=True
    )


# --- FOOTER ---
st.markdown("<hr>", unsafe_allow_html=True)
col_footer1, col_footer2, col_footer3 = st.columns([1, 4, 1])
with col_footer1:
    st.image(logo_ila, width=80)
with col_footer2:
    st.markdown(
        """
        <div style='font-size:14px; color:gray; line-height:1.4'>
        Este programa es una herramienta basada en mi Trabajo de Fin de M√°ster, desarrollada con el apoyo del Instituto de Ling√º√≠stica Aplicada (ILA) de la Universidad de C√°diz.  
        Adem√°s, he realizado en este centro las pr√°cticas de empresa del M√°ster en Ciencias del Lenguaje y sus Aplicaciones.
        </div>
        """,
        unsafe_allow_html=True
    )
with col_footer3:
    st.image(logo_neupaterm, width=80)
