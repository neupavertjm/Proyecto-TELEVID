import streamlit as st
import json

# Rutas de im√°genes por juego
logos_juegos = {
    'League of Legends': 'lol.jpg',
    'Valorant': 'valorant.jpg',
    'Counter Strike': 'counter.jpg'
}

# Logo del ILA para agradecimientos
logo_ila = "ila.jpg"  # Cambia por el nombre real del archivo

# Cargar JSON
with open('data.json', 'r', encoding='utf-8') as f:
    datos = json.load(f)

# Configuraci√≥n p√°gina
st.set_page_config(page_title="Proyecto TELEVID", layout="wide")

# --- T√çTULO Y DESCRIPCI√ìN ---
st.title("üîç Buscador de t√©rminos y usos terminol√≥gicos del lenguaje especializado de los videojuegos")
st.markdown(
        """
        **Proyecto realizado por Juan Manuel Neupavert Alzola**  
        Este buscador, que forma parte de la continuaci√≥n de mi Trabajo de Fin de M√°ster, permite explorar t√©rminos y usos terminol√≥gicos pertenecientes al lenguaje especializado de los videojuegos, pudiendo ver los distintos usos que tiene cada t√©rmino, sus definiciones, los mecanismos de incorporaci√≥n al espa√±ol y sus relaciones conceptuales dentro de nuestro corpus."""
    )

# --- BARRA LATERAL: mensajes breves, contacto, estado ---
st.sidebar.title("‚ÑπÔ∏è Informaci√≥n")
st.sidebar.info("üöß El proyecto TELEVID (T√©rminos Especializados del Lenguaje Especializado de los Videojuegos) est√° a√∫n en desarrollo. Algunas funcionalidades pueden no estar disponibles. Para m√°s informaci√≥n, cont√°ctanos por correo.")

st.sidebar.markdown("### Proyecto realizado por")
st.sidebar.markdown("**Juan Manuel Neupavert Alzola**")
st.sidebar.markdown("[LinkedIn](https://www.linkedin.com/in/juan-manuel-neupavert/) | [Email](mailto:neupavertjm@gmail.com)")
# --- INPUT DE B√öSQUEDA ---

# Lista fija de t√©rminos buscables
terminos_disponibles = [
    "Ace", "Agente", "Baitear", "Bait", "Baiter", "Boost", "Boostear", "Boosteo", "Bot", "Botlane",
    "Bufo", "Bufar", "Buff", "Carrear", "Carry", "Campe√≥n", "Clutcher", "Clutchear", "Clutch", "Debuff",
    "Kit", "Disengage", "Draft", "Drop", "Droppear", "Engagear", "Engage", "Feed", "Feedear", "Flash",
    "Flashear", "FPS", "Frag", "Gankeo", "Gankear", "Gankeado", "Kill", "Matar", "Kill feed", "Nerfeo",
    "Nerfear", "A una bala", "Oneshot", "Oneshotear", "OTP", "Pentakill", "Pentakillear", "Ping", "Pinguear",
    "Pingueo", "Pracc", "Praquear", "Scrimmear", "Scrim", "Solokill", "Solokillear", "Stack", "Stackear",
    "Carga", "Toplane", "Toplaner"
]

# Desplegable para seleccionar t√©rmino
termino_seleccionado = st.selectbox("üìÇ Tambi√©n puedes seleccionar un t√©rmino directamente:", [""] + terminos_disponibles)

# Si se selecciona un t√©rmino y no se ha escrito nada, usarlo como b√∫squeda
if termino_seleccionado and not busqueda:
    busqueda = termino_seleccionado

# Campo de texto para introducir t√©rmino manualmente
busqueda = st.text_input("Escribe un t√©rmino para buscar (recuerda que este t√©rmino debe estar en el corpus de la investigaci√≥n):")


# --- L√≥gica de b√∫squeda ---
if busqueda:
    busqueda_lower = busqueda.lower()
    exactos = [
        item for item in datos
        if busqueda_lower == item.get("T√©rmino en espa√±ol", "").lower()
        or busqueda_lower == item.get("T√©rmino en ingl√©s", "").lower()
    ]

    def mostrar_resultado(r):
        st.markdown(f"### üéÆ **{r.get('T√©rmino en espa√±ol', '')} / {r.get('T√©rmino en ingl√©s', '')}**")
        campos = [
            ("Sub√≠ndice", "Sub√≠ndice"),
            ("Definici√≥n", "üìò Definici√≥n"),
            ("Mecanismo de incorporaci√≥n al espa√±ol", "‚öôÔ∏è Mecanismo de incorporaci√≥n"),
            ("Categor√≠a ling√º√≠stica", "üî§ Categor√≠a ling√º√≠stica"),
            ("Contextos en espa√±ol", "üí¨ Contextos en espa√±ol"),
            ("Contexto en ingl√©s", "üí¨ Contexto en ingl√©s"),
            ("Fuente contexto espa√±ol", "üîó Fuente contexto en espa√±ol"),
            ("Fuente contexto ingl√©s", "üîó Fuente contexto en ingl√©s"),
            ("Relaciones conceptuales", "üß† Relaciones conceptuales"),
            ("Cuestiones traductol√≥gicas", "üà≥ Cuestiones traductol√≥gicas"),
            ("Fuente", "üìö Fuente"),
            ("Notas", "üìù Notas"),
        ]

        for clave, etiqueta in campos:
            valor = r.get(clave, "")
            if valor:
                if clave == "Relaciones conceptuales":
                    st.text(f"{etiqueta}:\n{valor}")
                else:
                    st.markdown(f"**{etiqueta}:** {valor}")

        juego_relacionado = r.get('Juego Relacionado', '')
        if juego_relacionado:
            juegos = [j.strip() for j in juego_relacionado.split(',')]
            st.markdown(f"**üéÆ Juegos relacionados:**")
            cols = st.columns(len(juegos))
            for i, juego in enumerate(juegos):
                if juego in logos_juegos:
                    with cols[i]:
                        st.image(logos_juegos[juego], width=70)
                        st.markdown(juego)


        st.markdown("---")

    if exactos:
        st.subheader("üîπ Coincidencias exactas:")
        for r in exactos:
            mostrar_resultado(r)
    else:
        st.warning("‚ö†Ô∏è No se encontraron coincidencias exactas.")

else:
    st.info("üí° Introduce un t√©rmino para comenzar la b√∫squeda.")

# --- FOOTER ---
st.markdown("---")
col_footer1, col_footer2 = st.columns([1, 4])
with col_footer1:
    st.image(logo_ila, width=80)
with col_footer2:
    st.markdown(
        """
        <div style='font-size:14px; color:gray; line-height:1.4'>
        Este programa es una herramienta basada en mi Trabajo de Fin de M√°ster, desarrollado con el apoyo del Instituto de Ling√º√≠stica Aplicada (ILA) de la Universidad de C√°diz, que ha proporcionado medios y recursos bibliogr√°ficos fundamentales para su realizaci√≥n.  
        Adem√°s, he realizado en este centro de investigaci√≥n las pr√°cticas de empresa del M√°ster en Ciencias del Lenguaje y sus Aplicaciones.
        </div>
        """,
        unsafe_allow_html=True
    )
